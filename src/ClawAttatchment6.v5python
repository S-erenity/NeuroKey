{"mode":"Text","textContent":"#region VEXcode Generated Robot Configuration\nfrom vex import *\nimport urandom\n\n# Brain & Controller\nbrain = Brain()\n\n# --- Controller fix (covers all template variations) ---\ntry:\n    controller_1  # already exists\nexcept NameError:\n    try:\n        controller_1 = controller  # alias if template made \"controller\"\n    except NameError:\n        controller_1 = Controller(PRIMARY)  # else create it\n\n# ---- PORT MAP ----\nARM_PORT  = Ports.PORT5      # move your arm here (or change to your real arm port)\nCLAW_PORT = Ports.PORT12     # your claw port\n\n# ---- Drive motors (original tank drive ports) ----\nLeftSide_motor_a  = Motor(Ports.PORT1,  GearSetting.RATIO_18_1, False)\nLeftSide_motor_b  = Motor(Ports.PORT2,  GearSetting.RATIO_18_1, False)\nRightSide_motor_a = Motor(Ports.PORT9,  GearSetting.RATIO_18_1, False)\nRightSide_motor_b = Motor(Ports.PORT10, GearSetting.RATIO_18_1, False)\n\nLeftSide  = MotorGroup(LeftSide_motor_a, LeftSide_motor_b)\nRightSide = MotorGroup(RightSide_motor_a, RightSide_motor_b)\n\n# ---- Mechanisms ----\narmMotor  = Motor(ARM_PORT,  GearSetting.RATIO_18_1, False)\nclawMotor = Motor(CLAW_PORT, GearSetting.RATIO_18_1, False)\n\n# wait for rotation sensor to fully initialize\nwait(30, MSEC)\n#endregion VEXcode Generated Robot Configuration\n\n\n# ---------------- Driver Control Loop ----------------\nwhile True:\n    # --- TANK DRIVE ---\n    LeftSide.set_velocity(controller_1.axis3.position(), PERCENT)\n    RightSide.set_velocity(controller_1.axis2.position(), PERCENT)\n    LeftSide.spin(FORWARD)\n    RightSide.spin(FORWARD)\n\n    # --- ARM CONTROL (L1 up, R1 down) ---\n    if controller_1.buttonL1.pressing():\n        armMotor.spin(FORWARD, 50, PERCENT)\n    elif controller_1.buttonR1.pressing():\n        armMotor.spin(REVERSE, 50, PERCENT)\n    else:\n        armMotor.stop(HOLD)\n\n    # --- CLAW CONTROL (L2 open, R2 close) ---\n    if controller_1.buttonL2.pressing():\n        clawMotor.spin(FORWARD, 40, PERCENT)   # OPEN\n    elif controller_1.buttonR2.pressing():\n        clawMotor.spin(REVERSE, 40, PERCENT)   # CLOSE\n    else:\n        clawMotor.stop(HOLD)\n\n    wait(5, MSEC)\n","textLanguage":"python","rconfig":[{"port":[1,2],"name":"LeftSide","customName":true,"deviceType":"MotorGroup","deviceClass":"motor_group","setting":{"fwd":"forward","rev":"reverse","gear":"ratio18_1","motor_a_reversed":"false","motor_b_reversed":"false"},"triportSourcePort":22},{"port":[9,10],"name":"RightSide","customName":true,"deviceType":"MotorGroup","deviceClass":"motor_group","setting":{"fwd":"forward","rev":"reverse","gear":"ratio18_1","motor_a_reversed":"false","motor_b_reversed":"false"},"triportSourcePort":22},{"port":[],"name":"controller_1","customName":false,"deviceType":"Controller","deviceClass":"controller","setting":{"left":"","leftDir":"false","right":"","rightDir":"false","upDown":"","upDownDir":"false","xB":"","xBDir":"false","drive":"none","id":"primary"},"triportSourcePort":22}],"slot":0,"platform":"V5","sdkVersion":"20220215.18.00.00","appVersion":"2.3.1","fileFormat":"1.0.1","icon":"","targetBrainGen":"First","target":"Physical"}